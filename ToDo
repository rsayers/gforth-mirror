This file describes all the things left to do on ANSI figForth. The
list is not complete, so you should add topics you miss or refine
existing topics. If you are working on a topic, add your name to the
right of the topic. If you have completed the work, remove the topic.

This an emacs outline. Use '*' to create topics.

*The Engine
**measure the effect of some variations on different machines:
direct/indirect, NEXT splitting, keeping the TOSses in variables
**make it easy to put the right variation for each processor into the
configuration.

* ANSI Forth
**Core and Core Ext
*** high-level words
**Other Word Sets

*Run-time System
**Gender-independent image file format and loader
**Memory Management
**Stack Checking
On most systems we could use the MMU (OS dependent).

*Porting/Portability
** Machines/OSs
UNIX (all machines supported by gcc)
VMS (Vax)
DOS Extender, 386sx and up
DOS 8088 (16-bit or 32-bit?)
Windows
OS/2
Mac
Atari
Amiga
Use gcc-generated assembly on machines without gcc

*Locals
**Concept
**Implementation

*Postponing	anton

*Foreign Language Interface
**Concept	anton
**C
**FORTRAN
**C++

*Windows and Graphics
Ask Brian Dunn and Mike Hore for their OS-independent interface

*Program Development Environment
Issues: Convenience, portability across plattforms, compatibility with
existing tools (Emacs, F-PC)
**prefix file generator
A tool for generating a prefix file for a program that explains in
what way the program conforms to ANSI and contains Forth definitions
for the simple non-ANSI words.

*Object-Oriented Extensions
John Hayes (?) has a portable package
Ask Phil Burke (phil@ntg.com), if he wants to contribute ODE

*Documentation
A texinfo file
**glossaries of all wordsets.
***Tool to generate glossaries benschop
***Inclusion of glossary comments in all source files.

*Distribution and Announcements
** Ask the FSF, if they want to distribute it
** Write articles for (general-purpose) magazines
